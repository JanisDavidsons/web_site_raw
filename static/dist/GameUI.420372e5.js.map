{"version":3,"sources":["../src/minesweeper/levels.ts","../src/minesweeper/Minesweeper.ts","../src/minesweeper/GameUI.ts"],"names":[],"mappings":";AASO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,EAAA,IAAM,EAAkB,CAC7B,CACE,MAAO,WACP,KAAM,GACN,QAAS,GACT,MAAO,IAET,CACE,MAAO,eACP,KAAM,GACN,QAAS,GACT,MAAO,IAET,CACE,MAAO,SACP,KAAM,GACN,QAAS,GACT,MAAO,KAET,CACE,MAAO,UACP,KAAM,GACN,QAAS,GACT,MAAM,IACN,aACE,CAAC,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACxS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GACvS,CAAC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EA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","file":"GameUI.420372e5.js","sourceRoot":"..","sourcesContent":["export interface Level {\n  title: string;\n  rows: number;\n  columns: number;\n  mines: number;\n  mineTemplate?: number[][];\n  mineLayout?: () => number[][];\n}\n\nexport const LEVELS: Level[] = [\n  {\n    title: \"Beginner\",\n    rows: 10,\n    columns: 10,\n    mines: 10,\n  },\n  {\n    title: \"Intermediate\",\n    rows: 25,\n    columns: 25,\n    mines: 25,\n  },\n  {\n    title: \"Expert\",\n    rows: 50,\n    columns: 50,\n    mines: 200,\n  },\n  {\n    title: \"Codelex\",\n    rows: 50,\n    columns: 50,\n    mines:171,\n    mineTemplate:\n      [[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],\n      [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]\n      ],\n\n    mineLayout: function () {\n      let mineArrayCoordinates: number[][] = [];\n\n      if (this.mineTemplate !== undefined) {\n        for (let i = 0; i < this.mineTemplate.length; i++) {\n          const innerArray = this.mineTemplate[i];\n          for (let j = 0; j < innerArray.length; j++) {\n            if (this.mineTemplate[i][j] === 0x01) {\n              mineArrayCoordinates.push([i, j]);\n            }\n          }\n        }\n      }\n      console.log(this.mines = mineArrayCoordinates.length)\n      this.mines = mineArrayCoordinates.length\n      return mineArrayCoordinates\n    },\n  }];\n","import { Level } from \"./levels\";\nimport { LEVELS } from \"./levels\";\n\nconst elementById = (id: string) => document.getElementById(id) as HTMLElement;\n\nexport class Cell {\n  isOpen: boolean = false;\n  mines: number = 0;\n  isBomb: boolean = false;\n  isFlag: boolean = false;\n  isUnsure: boolean = false;\n  //coordinates: number[] = [];\n  coordinateX:number=0;\n  coordinateY:number=0;\n}\n\nexport class Minesweeper {\n  private level: Level;\n  private mineExplosionAudio: any;\n  private supriseAudio: any;\n  private winnerAudio: any;\n  private cells: Cell[][] = [];\n  questionMarksEnabled: boolean = false;\n  customTemplateOn: boolean = false;\n  lost: boolean = false;\n  win: boolean = false;\n  tense: boolean = false;\n  timerOn: boolean = false;\n  currentTime: number = 0;\n  timerID: number = 0\n  minesLeft: number = 0;\n\n\n  constructor(level: Level) {\n    this.mineExplosionAudio = elementById('explosion');\n    this.supriseAudio = elementById('suprise');\n    this.winnerAudio = elementById('winner');\n    this.level = level;\n    //this.template = TEMPLATE[0]\n    this.initilazeCells();\n    this.makeMines();\n    this.countTouchingMines(level)\n  }\n\n  //Initialize and then populate two dimensional array with Cells objects\n  initilazeCells() {\n    for (let i = 0; i < this.level.columns; i++) {\n      this.cells[i] = [];\n      for (let j = 0; j < this.level.rows; j++) {\n        this.cells[i][j] = new Cell();\n        //recording each cells coordinates\n        this.cells[i][j].coordinateX = i;\n        this.cells[i][j].coordinateY = j;\n      }\n    }\n  }\n\n  //make mines at random locations in amount specified by current level\n  makeMines() {\n    if (this.customTemplateOn && this.level.mineLayout !== undefined) {\n      let minesCreated = 0;\n      while (minesCreated < this.level.mineLayout().length) {\n\n        this.level.mineLayout().forEach(element => {\n          this.cells[element[0]][element[1]].isBomb = true;\n        });\n        minesCreated++;\n\n      }\n    } else {\n      while (this.countCreatedMines() < this.level.mines) {\n        this.cells[Math.floor(Math.random()\n          * (this.cells.length - 1))][Math.floor(Math.random()\n            * (this.cells.length - 1))].isBomb = true;\n      }\n    }\n    this.minesLeft = this.countCreatedMines();\n  }\n\n  columnsCount(): number {\n    return this.cells.length;\n  }\n\n  getCells(): Cell[][] {\n    return this.cells\n  }\n\n  onLeftMouseDown(x: number, y: number) {\n    this.tense = true;\n  }\n\n  onLeftMouseUp(x: number, y: number) {\n\n    //first check should run (game lost or won)\n    if (this.isGameRunning()) {\n      //if so - start the timer\n      if (!this.timerOn) {\n        this.timerOn = true;\n        this.timerFunction()\n      }\n\n      this.tense = false;\n      //call reveal zeros function and check if open cell contains bomb\n      //if it does - it`s game over time\n      if (this.containsMine(x, y)) {\n        this.gameOver(x, y);\n      }\n      //if we managed this far, cell dioes not contain bomb, so open it up\n      this.revealZeros(x, y)\n    }\n  }\n\n  onRightMouseUp(x: number, y: number) {\n    if (this.isGameRunning() && this.cells[x][y].isOpen === false) {\n      if (!this.cells[x][y].isFlag && !this.cells[x][y].isUnsure) {\n        this.cells[x][y].isFlag = true;\n        this.minesLeft--;\n      } else if (this.cells[x][y].isFlag) {\n        this.minesLeft++;\n        this.cells[x][y].isFlag = false;\n        this.questionMarksEnabled ? this.cells[x][y].isUnsure = true : this.cells[x][y].isUnsure = false;\n      } else if (this.cells[x][y].isUnsure) {\n        this.cells[x][y].isUnsure = false;\n        this.cells[x][y].isBomb = false;\n      }\n    }\n  }\n\n  isTense(): boolean {\n    return this.tense;\n  }\n\n  timePassed(): number {\n    return this.currentTime\n  }\n\n  minesLeftCount(): number {\n    return this.minesLeft;\n  }\n\n  countCreatedMines(): number {\n    let minesLeft: number = 0;\n\n    this.cells.map((obj) => {\n      obj.forEach(element => {\n        element.isBomb ? minesLeft++ : minesLeft = minesLeft;\n      });\n    });\n    return minesLeft;\n  }\n\n  isGameRunning(): boolean {\n    if (this.lost) {\n      return false;\n    }\n    if (this.win) {\n      return false;\n    }\n    return true\n  }\n\n  gameOver(x: number, y: number) {\n    const allMines: number[][] = this.returnBombCoordinates();\n\n    for (let i = 0; i < allMines.length; i++) {\n      const element = allMines[i];\n      this.cells[element[0]][element[1]].isOpen = true;\n    }\n    if (this.isTemplatesEnabled()) {\n      this.supriseAudio.play();\n    } else {\n      this.mineExplosionAudio.play();\n    }\n\n    this.cells[x][y].isOpen = true;\n    this.lost = true;\n    this.timerOn = false;\n    clearInterval(this.timerID);\n  }\n\n  //Reset game when button is pressed\n  reset() {\n    this.timerOn = false;\n    this.lost = false;\n    this.tense = false;\n    this.currentTime = 0;\n    this.cells = [];\n    clearInterval(this.timerID)\n    this.initilazeCells();\n    this.makeMines();\n    this.countTouchingMines(this.level)\n  }\n\n  currentLevel(): Level {\n    return this.level;\n  }\n\n  selectLevel(level: Level) {\n    this.level = level;\n    if (this.level.title !==LEVELS[3].title) {\n      this.customTemplateOn = false;\n    }\n    this.reset();\n  }\n\n  isLost(): boolean {\n    return this.lost;\n  }\n\n  isWon(): boolean {\n    if (this.returnClosedCells().length === 0 && this.minesLeft === 0) {\n      this.winnerAudio.play();\n      clearInterval(this.timerID)\n      this.timerOn = false;\n      this.win = true;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  isQuestionMarksEnabled(): boolean {\n    return this.questionMarksEnabled;\n  }\n\n  isTemplatesEnabled(): boolean {\n    return this.customTemplateOn;\n  }\n\n  toggleQuestionMarksEnabled() {\n    this.questionMarksEnabled ? this.questionMarksEnabled = false : this.questionMarksEnabled = true;\n  }\n\n  toggleTemplatesEnabled() {\n    this.customTemplateOn ? this.customTemplateOn = false : this.customTemplateOn = true;\n    this.reset()\n  }\n\n  revealZeros(x: number, y: number): boolean {\n    this.cells[x][y].isOpen = true;\n\n    //first check if opened cell is bomb\n    if (this.containsMine(x, y)) {\n      return false;\n    }\n\n    //next check if opened cell contains number\n    if (this.cells[x][y].mines !== 0) {\n      return false;\n    }\n\n    //if we managed to get this far, opened cell is empty and function recursion can start\n    for (let i = x - 1; i <= x + 1; i++) {\n      for (let j = y - 1; j <= y + 1; j++) {\n        if (i < 0 || i >= this.level.rows ||\n          j < 0 || j >= this.level.columns)\n          continue;\n\n        //console.log(`Current cell to be checked is: x-->${i}  y-->${y}`)\n        if (!this.cells[i][j].isOpen)\n          this.revealZeros(i, j);\n      }\n    }\n    return true\n  }\n\n  containsMine(x: number, y: number): boolean {\n    if (this.cells[x][y].isBomb) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  countTouchingMines(level: Level) {\n    level = this.level;\n\n    for (let i = 0; i < level.columns; i++) {\n      for (let j = 0; j < level.rows; j++) {\n        //check if cell on the left contains bomb\n        if (this.cells[i][j - 1] !== undefined && this.cells[i][j - 1].isBomb) {\n          this.cells[i][j].mines++;\n        }\n\n        //check if cell on the right contains bomb\n        if (this.cells[i][j + 1] !== undefined && this.cells[i][j + 1].isBomb) {\n          this.cells[i][j].mines++;\n        }\n\n        //check if cell below contains bomb\n        if (this.cells[i - 1] !== undefined && this.cells[i - 1][j].isBomb) {\n          this.cells[i][j].mines++;\n        }\n\n        //check if cell above contains bomb\n        if (this.cells[i + 1] !== undefined && this.cells[i + 1][j].isBomb) {\n          this.cells[i][j].mines++;\n        }\n\n        //check if cell top left contains bomb\n        if (this.cells[i + 1] !== undefined && this.cells[i + 1][j + 1] !== undefined && this.cells[i + 1][j + 1].isBomb) {\n          this.cells[i][j].mines++;\n        }\n\n        //check if cell top right contains bomb\n        if (this.cells[i - 1] !== undefined && this.cells[i - 1][j + 1] !== undefined && this.cells[i - 1][j + 1].isBomb) {\n          this.cells[i][j].mines++;\n        }\n\n        //check if cell bottom left contains bomb\n        if (this.cells[i + 1] !== undefined && this.cells[i + 1][j - 1] !== undefined && this.cells[i + 1][j - 1].isBomb) {\n          this.cells[i][j].mines++;\n        }\n\n        //check if cell top right contains bomb\n        if (this.cells[i - 1] !== undefined && this.cells[i - 1][j - 1] !== undefined && this.cells[i - 1][j - 1].isBomb) {\n          this.cells[i][j].mines++;\n        }\n      }\n    }\n  }\n\n  //helper function to return cells that contain bombs\n  returnBombCoordinates(): number[][] {\n    let bombsLeft: number[][] = [];\n    this.cells.map((obj) => {\n      obj.forEach(element => {\n        if (element.isBomb) {\n          bombsLeft.push(new Array(element.coordinateX,element.coordinateY))\n        }\n      });\n    });\n    return bombsLeft;\n  }\n\n  //helper function to return empty cells as array\n  returnEmtyCellsCoord(): number[][] {\n    let emptyCells: number[][] = [];\n    this.cells.map((obj) => {\n      obj.forEach(element => {\n        if (element.mines === 0 && !element.isBomb) {\n          emptyCells.push(new Array(element.coordinateX, element.coordinateY))\n        }\n      });\n    });\n    return emptyCells;\n  }\n\n  //helper function to return empty cells as array\n  returnClosedCells(): number[][] {\n    let closedCells: number[][] = [];\n    this.cells.map((obj) => {\n      obj.forEach(element => {\n        if (!element.isOpen && !element.isBomb) {\n          closedCells.push(new Array(element.coordinateX,element.coordinateY))\n        }\n      });\n    });\n    return closedCells;\n  }\n\n  //function that counts seconds during gameplay\n  timerFunction() {\n    this.timerID = setInterval(() => { this.currentTime = this.currentTime + 1 }, 1000);\n  }\n}","import { Minesweeper, Cell } from \"./Minesweeper\";\nimport { LEVELS } from \"./levels\";\n\nconst cellWidth = 16;\n\nconst cellClassName = (cell: Cell): string => {\n  if (cell.isOpen) {\n    if (cell.isBomb) {\n      return \"mine-hit\";\n    }\n    return `mines${cell.mines}`;\n  }\n  if (cell.isFlag) {\n    return \"flag\";\n  }\n  if (cell.isUnsure) {\n    return \"question\";\n  }\n  return \"covered\";\n};\n\nconst faceClassName = (minesweeper: Minesweeper) => {\n  if (minesweeper.isLost()) {\n    return \"face-sad\";\n  }\n  if (minesweeper.isWon()) {\n    return \"face-sunglasses\";\n  }\n  if (minesweeper.isTense()) {\n    return \"face-surprised\";\n  }\n  return \"face-smile\";\n};\n\nconst getHundreds = (n: number) => Math.floor((n / 100) % 10);\nconst getTens = (n: number) => Math.floor((n / 10) % 10);\nconst getOnes = (n: number) => Math.floor(n % 10);\nconst elementById = (id: string) => document.getElementById(id) as HTMLElement;\n\nexport class GameUI {\n  private minesweeper: Minesweeper;\n  private isMenuOpen: boolean = false;\n  private windowWrapperOuter = elementById(\"window-wrapper-outer\");\n  private resetButton = elementById(\"minesweeper-reset-button\");\n  private menuLink = elementById(\"menu-link\");\n  private menu = elementById(\"menu\");\n  private menuNew = elementById(\"menu-new\");\n  private menuBeginner = elementById(\"menu-beginner\");\n  private menuIntermediate = elementById(\"menu-intermediate\");\n  private menuExpert = elementById(\"menu-expert\");\n  private menuMarks = elementById(\"menu-marks\");\n  private menuTemplate = elementById(\"Template-On\");\n\n  constructor() {\n    requestAnimationFrame(this.drawCounters.bind(this));\n    this.minesweeper = new Minesweeper(LEVELS[0]);\n    this.windowWrapperOuter.addEventListener(\"contextmenu\", e =>\n      e.preventDefault()\n    );\n    this.resetButton.addEventListener(\n      \"mousedown\",\n      () => (this.resetButton.className = \"face-pressed\")\n    );\n    this.resetButton.addEventListener(\"mouseup\", () => {\n      this.resetButton.className = \"face-smile\";\n      this.minesweeper.reset();\n      this.draw();\n    });\n    document.body.addEventListener(\"click\", () => {\n      if (this.isMenuOpen) {\n        this.isMenuOpen = false;\n        this.draw();\n      }\n    });\n    this.menuLink.addEventListener(\"click\", e => {\n      e.stopPropagation();\n      this.isMenuOpen = !this.isMenuOpen;\n      this.draw();\n    });\n    this.menuNew.addEventListener(\"click\", () => {\n      this.minesweeper.reset();\n      this.draw();\n    });\n    this.menuBeginner.addEventListener(\"click\", () => {\n      this.minesweeper.selectLevel(LEVELS[0]);\n      this.start();\n    });\n    this.menuIntermediate.addEventListener(\"click\", () => {\n      this.minesweeper.selectLevel(LEVELS[1]);\n      this.start();\n    });\n    this.menuExpert.addEventListener(\"click\", () => {\n      this.minesweeper.selectLevel(LEVELS[2]);\n      this.start();\n    });\n    this.menuMarks.addEventListener(\"click\", () => {\n      this.minesweeper.toggleQuestionMarksEnabled();\n      this.draw();\n    });\n    this.menuTemplate.addEventListener(\"click\", () => {\n      this.minesweeper.toggleTemplatesEnabled();\n      this.minesweeper.selectLevel(LEVELS[3]);\n      this.start()\n    });\n  }\n\n  start() {\n    const windowWrapperOuter = elementById(\"window-wrapper-outer\");\n    windowWrapperOuter.style.width =\n      cellWidth * this.minesweeper.columnsCount() + 27 + \"px\";\n    this.draw();\n    elementById(\"game\").style.display = \"block\";\n  }\n\n  draw() {\n    const minefield = elementById(\"minefield\");\n    minefield.innerHTML = \"\";\n    this.minesweeper\n      .getCells()\n      .forEach((row, i) =>\n        row.forEach((cell, j) => this.drawCell(minefield, cell, i, j))\n      );\n    this.drawResetButton();\n    this.drawCounters();\n    this.drawMenu();\n  }\n\n  drawCell(minefield: HTMLElement, cell: Cell, x: number, y: number) {\n    const div = document.createElement(\"div\");\n    div.className = cellClassName(cell);\n    minefield.appendChild(div);\n    div.addEventListener(\"mouseup\", e => {\n      if (e.which === 3) {\n        this.minesweeper.onRightMouseUp(x, y);\n      } else {\n        this.minesweeper.onLeftMouseUp(x, y);\n      }\n      this.draw();\n    });\n    div.addEventListener(\"mousedown\", e => {\n      if (e.which === 3) {\n        e.stopPropagation();\n        return;\n      }\n      this.minesweeper.onLeftMouseDown(x, y);\n      this.draw();\n    });\n  }\n\n  drawResetButton() {\n    this.resetButton.className = faceClassName(this.minesweeper);\n  }\n\n  drawCounters() {\n    const fillCounter = (prefix: string, count: number) => {\n      elementById(`${prefix}-hundreds`).className = `t${getHundreds(count)}`;\n      elementById(`${prefix}-tens`).className = `t${getTens(count)}`;\n      elementById(`${prefix}-ones`).className = `t${getOnes(count)}`;\n    };\n\n    fillCounter(\"mine-count\", this.minesweeper.minesLeftCount());\n    fillCounter(\"timer\", this.minesweeper.timePassed());\n    requestAnimationFrame(this.drawCounters.bind(this));\n  }\n\n  drawMenu() {\n    this.menuLink.className = this.isMenuOpen ? \"active\" : \"\";\n    this.menu.style.display = this.isMenuOpen ? \"block\" : \"none\";\n    const currentLevel = this.minesweeper.currentLevel();\n    this.menuBeginner.className =\n      currentLevel.title === LEVELS[0].title ? \"checked\" : \"game-level\";\n    this.menuIntermediate.className =\n      currentLevel.title === LEVELS[1].title ? \"checked\" : \"game-level\";\n    this.menuExpert.className =\n      currentLevel.title === LEVELS[2].title ? \"checked\" : \"game-level\";\n    this.menuMarks.className = this.minesweeper.isQuestionMarksEnabled()\n      ? \"checked\"\n      : \"game-level\";\n    this.menuTemplate.className = \n      currentLevel.title === LEVELS[3].title ? \"checked\" : \"game-level\";\n}\n\n}\n\nconst game = new GameUI();\ngame.start();\n"]}